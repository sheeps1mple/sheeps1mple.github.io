<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>HGAME2023wp（MISC）</title>
    <url>/2023/01/08/HGAME2023MISCwp/</url>
    <content><![CDATA[<p>一.Sign in {Misc}<br>aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ&#x3D;&#x3D;<br>base64密码<br>解码：hgame{Welcome_To_HGAME2023!}<br>二.e99p1ant_want_girlfriend{Misc}<br>打开010Editor，把图片拖进去<br><img src="https://img-blog.csdnimg.cn/38c7ff3f74ce407489ecc1d26a1a409b.png" alt="在这里插入图片描述"><br>把02改成03<br><img src="https://img-blog.csdnimg.cn/633aea336d794653a0b8884a49641f63.png" alt="在这里插入图片描述"><br>hgame{e99p1ant_want_a_girlfriend_qq_524306184}<br>三.Where am  I<br><img src="https://img-blog.csdnimg.cn/c837c923cae44947a3ab74db2017ca49.png" alt="在这里插入图片描述">PCAPNG 是一种用于将捕获的网络数据包跟踪记录到文件的格式。 它被设计为 tcpdump 和其他使用 libpcap 库的软<br>件使用的原始 PCAP 格式的可扩展继承者.目前，只有 Wireshark 可以读取和写入 PCAPNG 文件，而 libpcap （以及<br>使用它的软件）只能读取其中一些文件。<br><img src="https://img-blog.csdnimg.cn/2a079bf7c0e445caba064737e1a0acec.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/611f16c0c2b64560a470edba734b4467.png" alt="在这里插入图片描述"><br>另存为 1.jpg 到桌面，发现打不开，拖入010，与下图对比发现<br><img src="https://img-blog.csdnimg.cn/2c397c54be5d4b4f933b7da17593d64f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f7fad212d4504527bde2905a550fb99d.png" alt="在这里插入图片描述"><br>至此均可以参考这篇文章！删除前段无用信息可得到<br><img src="https://img-blog.csdnimg.cn/58f66d8d43d741d9aa9fa23262ebd654.png" alt="在这里插入图片描述"><br>打开图片有密码<br><img src="https://img-blog.csdnimg.cn/f1d66dde97084a42b6034d8d44bfc211.png" alt="在这里插入图片描述"><br>rar文件伪加密：第24个字节，该字节尾数为4表示加密，0表示无加密，将尾数改为0即可破解伪加密<br>zip文件伪加密：当压缩源文件目录区的全局方位标记为0900(表示为加密)，<br>并且压缩文件数据区的全局方式位标记为0000(未加密)则会被识别为加密，但是文件并没有真正的加密，也就是所说的<br>伪加密<br><img src="https://img-blog.csdnimg.cn/48d01ce8e091462eba7cce8d9ed95748.png" alt="在这里插入图片描述"><br>前文说了图片损坏，所以再把图片拉进去！尝试修改图片，让其显示…<br><img src="https://img-blog.csdnimg.cn/d99e3f0aab134d8b913cb8ebe9cd20b3.png" alt="在这里插入图片描述"><br>观察一下，似乎找不到修改的地方！那就直接把图片拖进在线网站里，信息出来了！<br><img src="https://img-blog.csdnimg.cn/15abfec51f554ceabf2a78f6427b887e.png" alt="在这里插入图片描述"><br>还有火狐的扩展，可以试试！<br>四.神秘的海报<br>lsp隐写<br><img src="https://img-blog.csdnimg.cn/9c59da1e2184487d8704eb55c6e4c70f.png" alt="在这里插入图片描述"><br>可以得到<br><img src="https://img-blog.csdnimg.cn/7d58232eea1f40848d21724a61186fc9.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a97664c1a3004834ae599e903ad809da.png" alt="在这里插入图片描述"><br>获得音乐，由题可得加密方式，从而进一步可得！<br>stegseek进行密码爆破： time stegseek 1.wav passwad.txt （自己找一个字典）<br><img src="https://img-blog.csdnimg.cn/0b987c8542d04a609ba3ccc07190c726.png" alt="在这里插入图片描述"><br>使用命令 steghide extract -sf 1.wav -p 123456  将隐藏信息从载体中分离出来<br><img src="https://img-blog.csdnimg.cn/8582afc4c6444d2680fea092469f24bd.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8956400f55054c0480586268a6c916c0.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>MISC</tag>
      </tags>
  </entry>
  <entry>
    <title>2.26周赛wp</title>
    <url>/2023/02/27/2-26%E5%91%A8%E8%B5%9Bwp/</url>
    <content><![CDATA[<h1 id="周赛（02-x2F-26）WP"><a href="#周赛（02-x2F-26）WP" class="headerlink" title="周赛（02&#x2F;26）WP"></a>周赛（02&#x2F;26）WP</h1><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="1-Keyed-Caesar"><a href="#1-Keyed-Caesar" class="headerlink" title="1.Keyed Caesar"></a>1.Keyed Caesar</h3><p>key里字母在字母表中的数字就是偏移量</p>
<p>注意凯撒通常只针对二十六个字母</p>
<h3 id="2-找找看"><a href="#2-找找看" class="headerlink" title="2.找找看"></a>2.找找看</h3><p>这道题是原题</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/14c0f5c3b41d2973085306c546ae83f2.png" alt="image-20230226184700958"></p>
<h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="1-re1"><a href="#1-re1" class="headerlink" title="1.re1"></a>1.re1</h3><p>再简单不过的一道re，考虑到你们寒假有点懈怠（我也是）出的及其入门的题目找点自信</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/7e45dc88c1445c8fd8fd26a73ed9623a.png" alt="image-20230225115535710"></p>
<p>没什么可说的 3替换成e 4替换成a结束</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">flag = <span class="string">&quot;&#123;34sy_r3v3rs3&#125;&quot;</span></span><br><span class="line">flag=flag.replace(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;e&quot;</span>).replace(<span class="string">&quot;4&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;SLsec&quot;</span> + flag)</span><br></pre></td></tr></table></figure>

<h3 id="2-re2"><a href="#2-re2" class="headerlink" title="2.re2"></a>2.re2</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/e64c2ac95e77c3fd6f1d11b0f90d28cf.png" alt="image-20230225134651061"></p>
<p>只挑选了 97 98 65 66 这几个数字加24 其他都是减2(比赛的发现判断范围有问题，但是不影响做题)</p>
<p>第一种方法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str1[<span class="number">64</span>] = <span class="string">&quot;QJqcaypc]fcjjm&#123;&quot;</span>;</span><br><span class="line">    <span class="comment">//char flag[64] = &quot;SLsec&#123;re_hello&#125;&quot;;</span></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(str1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( str1[i] &gt; <span class="number">94</span> &amp;&amp; str1[i] &lt;= <span class="number">96</span> || str1[i] &gt; <span class="number">62</span> &amp;&amp; str1[i] &lt;= <span class="number">64</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            str1[i] -= <span class="number">24</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            str1[i] += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str1[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种方法是爆破</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> Str1[<span class="number">16</span>] = <span class="string">&quot;QJqcaypc]fcjjm&#123;&quot;</span>;</span><br><span class="line">    <span class="type">char</span> flag[<span class="number">16</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> i,j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">65</span>;j&lt;<span class="number">126</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			flag[i] = j;</span><br><span class="line">			<span class="keyword">if</span> ( flag[i] &gt; <span class="number">96</span> &amp;&amp; flag[i] &lt;= <span class="number">98</span> || flag[i] &gt; <span class="number">64</span> &amp;&amp; flag[i] &lt;= <span class="number">66</span> )</span><br><span class="line">			&#123;</span><br><span class="line">      			flag[i] += <span class="number">24</span>;</span><br><span class="line">			&#125;</span><br><span class="line">    		<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">     			flag[i] -= <span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(flag[i] == Str1[i])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-re3"><a href="#3-re3" class="headerlink" title="3.re3"></a>3.re3</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/88fbf1bbcc60a47e40d12082cc87aee8.png" alt="image-20230226013043966"></p>
<p>主函数啥都没有，在函数列表发现了名为ques的可疑函数，经过调试程序并没有执行这个函数，思路是修改EIP即可</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/3fd2c04e586fc72ce9df9ac09d6c5d2b.png" alt="image-20230226013109781"></p>
<p>ques函数地址00401520</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/53fcc3b508e43f3b8df9b18b48f099be.png" alt="image-20230226013328290"></p>
<p>修改之后按F9执行就可</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/22986ba5bcf25ac3d16219d9c2bd6a30.png" alt="image-20230226013418305"></p>
<p>HACKIT4FUN</p>
<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-神奇的二维码"><a href="#1-神奇的二维码" class="headerlink" title="1.神奇的二维码"></a>1.神奇的二维码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;hex.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> h:</span><br><span class="line">    h = h.read()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./ascii.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> a:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(h), <span class="number">2</span>):</span><br><span class="line">        tmp = <span class="string">&#x27;0x&#x27;</span>+h[i]+h[i+<span class="number">1</span>]</span><br><span class="line">        tmp = <span class="built_in">int</span>(tmp, base=<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(tmp) != <span class="string">&#x27;(&#x27;</span> <span class="keyword">and</span> <span class="built_in">chr</span>(tmp) != <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            a.write(<span class="built_in">chr</span>(tmp))</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x, y = np.loadtxt(<span class="string">&#x27;./ascii.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>, unpack=<span class="literal">True</span>)</span><br><span class="line">plt.plot(x, y,  <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>010打开图片发现很多16进制数据，提取出来转化为字符串就是坐标，再利用坐标画个二维码就可</p>
<p>第二种方法更简单，在linux利用gnuplot插件就能画图</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/cf1eda22ffe32576e96cff640fbb4830.png" alt="image-20230226184450729"></p>
<h3 id="2-re4"><a href="#2-re4" class="headerlink" title="2.re4"></a>2.re4</h3><p>明文爆破压缩包</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/5db0201d0b9c9971100d64f69c9e958a.png" alt="image-20230226191238175"></p>
<p>随后用IDA打开看主函数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  FILE *stream; <span class="comment">// ST08_8</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> i; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="type">char</span> ptr[<span class="number">24</span>]; <span class="comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v7; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">40u</span>);</span><br><span class="line">  stream = <span class="built_in">fopen</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="built_in">fread</span>(ptr, <span class="number">1uLL</span>, <span class="number">20uLL</span>, stream);</span><br><span class="line">  <span class="built_in">fclose</span>(stream);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( i &amp; <span class="number">1</span> )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">int</span>)(ptr[i] &lt;&lt; i));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">int</span>)(i * ptr[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>没什么加密，顺着逆一下就出了</p>
<p>脚本</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	 <span class="type">int</span> arr[<span class="number">20</span>] = &#123; <span class="number">0</span>, <span class="number">198</span>,<span class="number">232</span>,<span class="number">816</span>,<span class="number">200</span>,<span class="number">1536</span>,<span class="number">300</span>,<span class="number">6144</span>,<span class="number">984</span>,<span class="number">51200</span>,<span class="number">570</span>,<span class="number">92160</span>,<span class="number">1200</span>,<span class="number">565248</span>,<span class="number">756</span>,<span class="number">1474560</span>,<span class="number">800</span>,<span class="number">6291456</span>,<span class="number">1782</span>,<span class="number">65536000</span>&#125;;</span><br><span class="line">	<span class="comment">//a[0]补0保证正常循环</span></span><br><span class="line">	<span class="type">char</span> c;</span><br><span class="line">	<span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((i &amp; <span class="number">1</span>))</span><br><span class="line">			c = (arr[i] &gt;&gt; i);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			c = (arr[i] / i);</span><br><span class="line">		<span class="built_in">putchar</span>(c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h3 id="3-小狗玩偶"><a href="#3-小狗玩偶" class="headerlink" title="3.小狗玩偶"></a>3.小狗玩偶</h3><p>flag总共两部分，16进制文本里能看到一部分，另一部分在LSB隐写</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/26b95f751f19647737bc484e131a07fd.png" alt="image-20230226185133964"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/95a59a35de4a3338aa59b2d0d15c25db.png" alt="image-20230226185302457"></p>
<h4 id="4-zip"><a href="#4-zip" class="headerlink" title="4.zip"></a>4.zip</h4><p>有密码尝试一下确定不是伪加密，爆破4到7为纯数字成功，打开压缩包是一串编码，16进制解一下就是flag</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/8982f5d79059cc2b18637d5e250508cb.png" alt="image-20230226185650652"></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-web1"><a href="#1-web1" class="headerlink" title="1.web1"></a>1.web1</h3><?PHP 

  show_source(__FILE__);

  ini_set("allow_url_include","on");

  error_reporting(0);

  $file=$_GET['file'];

  $q=$_GET['q'];

  $a = $GET['a'];

  $b = $_GET['b'];

  $c = $_POST['c'];

  $v = $_POST['v'];

  if($q==1 && $q+1 !== 2){ #q==弱比较，不同格式会先转换成同类型再比较，q!+1!==2是强比较必须类型数值完全相同科学计数法绕过即可

​    if($a != $b && md5($a) == md5($b))]]></content>
      <categories>
        <category>周赛</category>
      </categories>
      <tags>
        <tag>周赛wp</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题美化：添加网易云背景音乐</title>
    <url>/2023/01/13/NEXT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%EF%BC%9A%E6%B7%BB%E5%8A%A0%E7%BD%91%E6%98%93%E4%BA%91%E8%83%8C%E6%99%AF%E9%9F%B3%E4%B9%90/</url>
    <content><![CDATA[<p>打开网易云音乐网页版<a href="https://music.163.com/">https://music.163.com/</a><br>找到自己要放的歌。<br><img src="https://img-blog.csdnimg.cn/11e6bc6b68e04baab85e03d1ded07b73.png" alt="在这里插入图片描述"><br>点击生成外链播放器<br><img src="https://img-blog.csdnimg.cn/48f6f95742e14cb4b4b4917a8001411e.png" alt="在这里插入图片描述"><br>然后复制代码。<br>进入next主题文件夹\themes\next\layout_macro<br>找到<img src="https://img-blog.csdnimg.cn/6a826b7f3d7f474a886d32be7eebf08e.png" alt="在这里插入图片描述"><br>点进去，将链接粘贴进去就可以了（注：粘贴的位置不一样，歌在网页中的位置也不一样，建议多试几次）</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题美化：修改背景图片</title>
    <url>/2023/01/11/NEXT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%EF%BC%9A%E4%BF%AE%E6%94%B9%E8%83%8C%E6%99%AF%E5%9B%BE%E7%89%87/</url>
    <content><![CDATA[<p>一.修改背景图片。<br>找到自己想换的壁纸，存放在themes&#x2F;next&#x2F;source&#x2F;images中，命名为background.jpg（直接重命名就行）。在根目录的source文件夹下新建文件夹_data与style文件(style文件如何创建：直接创建个文本文档，然后重命名就可以。重命名为styles.styl)source&#x2F;_data&#x2F;styles.styl，输入以下代码：<br>body {<br>     background:url(&#x2F;images&#x2F;background.jpg);<br>     background-repeat: no-repeat;<br>    background-attachment:fixed;<br>    background-position:100% 100%;<br>}<br>background:url为图片路径，也可以直接使用链接。<br>background-repeat：若果背景图片不能全屏，那么是否平铺显示，充满屏幕<br>background-attachment：背景是否随着网页上下滚动而滚动，fixed为固定<br>background-position：图片展示大小这里设置 100%，100% 的意义为：如果背景图片不能全屏，那么是否通过拉伸的方式将背景强制拉伸至全屏显示。<br>再在主题_config.yml文件中找到对应的custom_file_path：<br><img src="https://img-blog.csdnimg.cn/67eb0000cb7d4403bcb82cfc254b3c6c.png" alt="在这里插入图片描述"><br>把这个去掉#就可以。<br>接着：1.hexo clean  2.hexo g  3.hexo d<br>二.修改博客内容透明度<br>注：博客内容不是透明的，背景图片会看不到。<br>在上述的styles.styl文件中，直接粘贴以下代码：<br>.content-wrap {<br>  opacity: 0.9;<br>}</p>
<p>.sidebar {<br>  opacity: 0.9;<br>}</p>
<p>.header-inner {<br>  background: rgba(255,255,255,0.9);<br>}</p>
<p>.popup {<br>  opacity: 0.9;<br>}<br>然后 1.hexo clean  2.hexo g   3.hexo d</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题美化：文章评论功能</title>
    <url>/2023/01/11/NEXT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%EF%BC%9A%E6%96%87%E7%AB%A0%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>最终效果如下：<br><img src="https://img-blog.csdnimg.cn/ebdccd9616894058831afdde218e0870.png" alt="在这里插入图片描述"><br>Valine - 一款快速、简洁高效的无后端评论系统。</p>
<p>NexT 主题已经集成了 Valine 评论系统，只要填写一些参数即可使用。<br>首先进入<a href="https://www.leancloud.cn/%EF%BC%8C%E6%B3%A8%E5%86%8CLeanCloud%E3%80%82">https://www.leancloud.cn/，注册LeanCloud。</a><br>找到创建应用<br><img src="https://img-blog.csdnimg.cn/fd26a48571f743daaca3278722ed1b1d.png" alt="在这里插入图片描述"><br>在这里填写你的应用名称,名称可以自己定义，然后下面选择开发版 点击创建。<br>接着点击设置，点击应用凭证<br><img src="https://img-blog.csdnimg.cn/2f60cda49dc74c9e93a1f37c5bafa902.png" alt="在这里插入图片描述"><br>获取App ID和AppKey<br><img src="https://img-blog.csdnimg.cn/7a2ec13dce9445c08a30b6ccf8243a3c.png" alt="在这里插入图片描述"><br>登录Valine（<a href="https://valine.js.org/quickstart.html%EF%BC%89">https://valine.js.org/quickstart.html）</a><br>点击快速开始，点击登录，选择LeanCloud登录，然后输入刚才的注册好的账号就行。<br><img src="https://img-blog.csdnimg.cn/4f61d2b7718c48bc8795de06ac546672.png" alt="在这里插入图片描述"><br>打开主题配置文件，找到valine配置<br>注意（App ID和AppKey填你自己的）<br><img src="https://img-blog.csdnimg.cn/786f926cf12447f18770b8bfdd1800f5.png" alt="在这里插入图片描述"><br>最后三连：hexo clean……</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题美化：添加作者头像</title>
    <url>/2023/01/11/NEXT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%EF%BC%9A%E6%B7%BB%E5%8A%A0%E4%BD%9C%E8%80%85%E5%A4%B4%E5%83%8F/</url>
    <content><![CDATA[<p>把自己想要换的头像放在themes&#x2F;next&#x2F;source&#x2F;images&#x2F;<br>把头像名称重命名为avatar_2.gif<br>然后在themes&#x2F;next&#x2F;_config.yml中找到下面这行，进行修改<br><img src="https://img-blog.csdnimg.cn/24d93bdce45a40bda292f4ae5253560e.png" alt="在这里插入图片描述"><br>最后hexo  clean，hexo g,hexo d</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>NEXT主题美化：文章打赏功能</title>
    <url>/2023/01/11/NEXT%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96%EF%BC%9A%E6%96%87%E7%AB%A0%E6%89%93%E8%B5%8F%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<p>最终效果如下：<br><img src="https://img-blog.csdnimg.cn/d8b7fd0ecc03473f9f6375d0cf579c96.png" alt="在这里插入图片描述"><br>找到主题配置文件 _config.yml 中的 Reward(donate) 部分，将其设置为如下所示：<br><img src="https://img-blog.csdnimg.cn/23f07fd0f871419bbac94f8d879d65c4.png" alt="在这里插入图片描述"><br>把wechatpay和alipay前面的#去掉即可。<br>然后三连：hexo clean……</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
  <entry>
    <title>二进制简写形式</title>
    <url>/2023/02/22/%E4%BA%8C%E8%BF%9B%E5%88%B6%E7%AE%80%E5%86%99%E5%BD%A2%E5%BC%8F/</url>
    <content><![CDATA[<p>二进制与十六进制转换<br>二进制：0000  0001  0010  0011  0100  0101  0110  0111  1000 1001  1010  1011  1100  1101  1110  1111<br>十六进制： 0        1        2        3          4        5         6        7    8    9   A    B    C    D    E    F<br>6D 6F 64 65</p>
<p>0110 1101 0110 1111 0110 0100 0110 0101</p>
]]></content>
      <categories>
        <category>汇编</category>
      </categories>
      <tags>
        <tag>汇编</tag>
      </tags>
  </entry>
  <entry>
    <title>怎样发文章到自己的个人博客上？</title>
    <url>/2023/01/06/%E6%80%8E%E6%A0%B7%E5%8F%91%E6%96%87%E7%AB%A0%E5%88%B0%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E4%B8%8A%EF%BC%9F/</url>
    <content><![CDATA[<p>1.首先注册一个csdn账号，因为我们要用其中的markdown编译器<br><img src="https://img-blog.csdnimg.cn/653d70dbfb7c43849cf6e64c5a6fa7b5.png" alt="在这里插入图片描述"><br>2.进入之后，选择写博客，然后在左上角选择markdown编辑器<br><img src="https://img-blog.csdnimg.cn/2c72aecf00a94b7b8c33120952a8281a.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/c3ec217cd0ad41668d6665784a02b758.png" alt="在这里插入图片描述"><br>3.写完之后，点击上面的导出，然后选择右面的导出为Markdown文件。<br><img src="https://img-blog.csdnimg.cn/c4adc7e47ded463ba1d2b8469c6ae386.png" alt="在这里插入图片描述"></p>
<p>4.导出来之后，在电脑中找到这个.md文件。将其复制下来后，粘贴到你的hexo博客文件夹 中 source 下的 _posts 中。<br>5.右击选择Git Bash Here,依次输入：<br>hexo g<br>hexo s<br>hexo d<br>5.最后浏览器中输入<br>https:&#x2F;&#x2F;(你的博客名).github.io&#x2F; 回车就可以看到你刚刚发的文章了。<br>（我用CSDN直接导出的markdown文件上传到博客会没有显示没有标题。所以我经常是在根目录打开Git Bash Here，输入hexo new”(标题)”。然后复制从CSDN导出来的内容，粘贴到创建的文件里面，然后再上传到博客。这样就会有标题了）</p>
]]></content>
      <categories>
        <category>NEXT</category>
      </categories>
      <tags>
        <tag>NEXT主题美化</tag>
      </tags>
  </entry>
</search>
