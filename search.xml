<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>2.26周赛wp</title>
    <url>/2023/02/27/2-26%E5%91%A8%E8%B5%9Bwp/</url>
    <content><![CDATA[<h1 id="周赛（02-x2F-26）WP"><a href="#周赛（02-x2F-26）WP" class="headerlink" title="周赛（02&#x2F;26）WP"></a>周赛（02&#x2F;26）WP</h1><h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="1-Keyed-Caesar"><a href="#1-Keyed-Caesar" class="headerlink" title="1.Keyed Caesar"></a>1.Keyed Caesar</h3><p>key里字母在字母表中的数字就是偏移量</p>
<p>注意凯撒通常只针对二十六个字母</p>
<h3 id="2-找找看"><a href="#2-找找看" class="headerlink" title="2.找找看"></a>2.找找看</h3><p>这道题是原题</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/14c0f5c3b41d2973085306c546ae83f2.png" alt="image-20230226184700958"></p>
<h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="1-re1"><a href="#1-re1" class="headerlink" title="1.re1"></a>1.re1</h3><p>再简单不过的一道re，考虑到你们寒假有点懈怠（我也是）出的及其入门的题目找点自信</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/7e45dc88c1445c8fd8fd26a73ed9623a.png" alt="image-20230225115535710"></p>
<p>没什么可说的 3替换成e 4替换成a结束</p>
<figure class="highlight py"><table><tr><td class="code"><pre><span class="line">flag = <span class="string">&quot;&#123;34sy_r3v3rs3&#125;&quot;</span></span><br><span class="line">flag=flag.replace(<span class="string">&quot;3&quot;</span>,<span class="string">&quot;e&quot;</span>).replace(<span class="string">&quot;4&quot;</span>,<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;SLsec&quot;</span> + flag)</span><br></pre></td></tr></table></figure>

<h3 id="2-re2"><a href="#2-re2" class="headerlink" title="2.re2"></a>2.re2</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/e64c2ac95e77c3fd6f1d11b0f90d28cf.png" alt="image-20230225134651061"></p>
<p>只挑选了 97 98 65 66 这几个数字加24 其他都是减2(比赛的发现判断范围有问题，但是不影响做题)</p>
<p>第一种方法</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> str1[<span class="number">64</span>] = <span class="string">&quot;QJqcaypc]fcjjm&#123;&quot;</span>;</span><br><span class="line">    <span class="comment">//char flag[64] = &quot;SLsec&#123;re_hello&#125;&quot;;</span></span><br><span class="line">    <span class="type">int</span> len = <span class="built_in">strlen</span>(str1);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( str1[i] &gt; <span class="number">94</span> &amp;&amp; str1[i] &lt;= <span class="number">96</span> || str1[i] &gt; <span class="number">62</span> &amp;&amp; str1[i] &lt;= <span class="number">64</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            str1[i] -= <span class="number">24</span>;  </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> </span><br><span class="line">        &#123;</span><br><span class="line">            str1[i] += <span class="number">2</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,str1[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>第二种方法是爆破</p>
<figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">char</span> Str1[<span class="number">16</span>] = <span class="string">&quot;QJqcaypc]fcjjm&#123;&quot;</span>;</span><br><span class="line">    <span class="type">char</span> flag[<span class="number">16</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="type">int</span> i,j = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">16</span>;i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(j=<span class="number">65</span>;j&lt;<span class="number">126</span>;j++)</span><br><span class="line">		&#123;</span><br><span class="line">			flag[i] = j;</span><br><span class="line">			<span class="keyword">if</span> ( flag[i] &gt; <span class="number">96</span> &amp;&amp; flag[i] &lt;= <span class="number">98</span> || flag[i] &gt; <span class="number">64</span> &amp;&amp; flag[i] &lt;= <span class="number">66</span> )</span><br><span class="line">			&#123;</span><br><span class="line">      			flag[i] += <span class="number">24</span>;</span><br><span class="line">			&#125;</span><br><span class="line">    		<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">     			flag[i] -= <span class="number">2</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">if</span>(flag[i] == Str1[i])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j);</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">     </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="3-re3"><a href="#3-re3" class="headerlink" title="3.re3"></a>3.re3</h3><p><img src="https://img-blog.csdnimg.cn/img_convert/88fbf1bbcc60a47e40d12082cc87aee8.png" alt="image-20230226013043966"></p>
<p>主函数啥都没有，在函数列表发现了名为ques的可疑函数，经过调试程序并没有执行这个函数，思路是修改EIP即可</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/3fd2c04e586fc72ce9df9ac09d6c5d2b.png" alt="image-20230226013109781"></p>
<p>ques函数地址00401520</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/53fcc3b508e43f3b8df9b18b48f099be.png" alt="image-20230226013328290"></p>
<p>修改之后按F9执行就可</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/22986ba5bcf25ac3d16219d9c2bd6a30.png" alt="image-20230226013418305"></p>
<p>HACKIT4FUN</p>
<h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="1-神奇的二维码"><a href="#1-神奇的二维码" class="headerlink" title="1.神奇的二维码"></a>1.神奇的二维码</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;hex.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> h:</span><br><span class="line">    h = h.read()</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./ascii.txt&#x27;</span>, <span class="string">&#x27;a&#x27;</span>) <span class="keyword">as</span> a:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(h), <span class="number">2</span>):</span><br><span class="line">        tmp = <span class="string">&#x27;0x&#x27;</span>+h[i]+h[i+<span class="number">1</span>]</span><br><span class="line">        tmp = <span class="built_in">int</span>(tmp, base=<span class="number">16</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">chr</span>(tmp) != <span class="string">&#x27;(&#x27;</span> <span class="keyword">and</span> <span class="built_in">chr</span>(tmp) != <span class="string">&#x27;)&#x27;</span>:</span><br><span class="line">            a.write(<span class="built_in">chr</span>(tmp))</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plt</span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> np</span><br><span class="line">x, y = np.loadtxt(<span class="string">&#x27;./ascii.txt&#x27;</span>, delimiter=<span class="string">&#x27;,&#x27;</span>, unpack=<span class="literal">True</span>)</span><br><span class="line">plt.plot(x, y,  <span class="string">&#x27;.&#x27;</span>)</span><br><span class="line">plt.show()</span><br></pre></td></tr></table></figure>

<p>010打开图片发现很多16进制数据，提取出来转化为字符串就是坐标，再利用坐标画个二维码就可</p>
<p>第二种方法更简单，在linux利用gnuplot插件就能画图</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/cf1eda22ffe32576e96cff640fbb4830.png" alt="image-20230226184450729"></p>
<h3 id="2-re4"><a href="#2-re4" class="headerlink" title="2.re4"></a>2.re4</h3><p>明文爆破压缩包</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/5db0201d0b9c9971100d64f69c9e958a.png" alt="image-20230226191238175"></p>
<p>随后用IDA打开看主函数</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="type">int</span> argc, <span class="type">const</span> <span class="type">char</span> **argv, <span class="type">const</span> <span class="type">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  FILE *stream; <span class="comment">// ST08_8</span></span><br><span class="line">  <span class="type">signed</span> <span class="type">int</span> i; <span class="comment">// [rsp+4h] [rbp-2Ch]</span></span><br><span class="line">  <span class="type">char</span> ptr[<span class="number">24</span>]; <span class="comment">// [rsp+10h] [rbp-20h]</span></span><br><span class="line">  <span class="type">unsigned</span> __int64 v7; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">40u</span>);</span><br><span class="line">  stream = <span class="built_in">fopen</span>(<span class="string">&quot;flag&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">  <span class="built_in">fread</span>(ptr, <span class="number">1uLL</span>, <span class="number">20uLL</span>, stream);</span><br><span class="line">  <span class="built_in">fclose</span>(stream);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( i &amp; <span class="number">1</span> )</span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">int</span>)(ptr[i] &lt;&lt; i));</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">printf</span>(<span class="string">&quot;%ld\n&quot;</span>, (<span class="type">unsigned</span> <span class="type">int</span>)(i * ptr[i]));</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<p>没什么加密，顺着逆一下就出了</p>
<p>脚本</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	 <span class="type">int</span> arr[<span class="number">20</span>] = &#123; <span class="number">0</span>, <span class="number">198</span>,<span class="number">232</span>,<span class="number">816</span>,<span class="number">200</span>,<span class="number">1536</span>,<span class="number">300</span>,<span class="number">6144</span>,<span class="number">984</span>,<span class="number">51200</span>,<span class="number">570</span>,<span class="number">92160</span>,<span class="number">1200</span>,<span class="number">565248</span>,<span class="number">756</span>,<span class="number">1474560</span>,<span class="number">800</span>,<span class="number">6291456</span>,<span class="number">1782</span>,<span class="number">65536000</span>&#125;;</span><br><span class="line">	<span class="comment">//a[0]补0保证正常循环</span></span><br><span class="line">	<span class="type">char</span> c;</span><br><span class="line">	<span class="keyword">for</span> ( <span class="type">int</span> i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; i++)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">if</span> ((i &amp; <span class="number">1</span>))</span><br><span class="line">			c = (arr[i] &gt;&gt; i);</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">			c = (arr[i] / i);</span><br><span class="line">		<span class="built_in">putchar</span>(c);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br></pre></td></tr></table></figure>

<h3 id="3-小狗玩偶"><a href="#3-小狗玩偶" class="headerlink" title="3.小狗玩偶"></a>3.小狗玩偶</h3><p>flag总共两部分，16进制文本里能看到一部分，另一部分在LSB隐写</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/26b95f751f19647737bc484e131a07fd.png" alt="image-20230226185133964"></p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/95a59a35de4a3338aa59b2d0d15c25db.png" alt="image-20230226185302457"></p>
<h4 id="4-zip"><a href="#4-zip" class="headerlink" title="4.zip"></a>4.zip</h4><p>有密码尝试一下确定不是伪加密，爆破4到7为纯数字成功，打开压缩包是一串编码，16进制解一下就是flag</p>
<p><img src="https://img-blog.csdnimg.cn/img_convert/8982f5d79059cc2b18637d5e250508cb.png" alt="image-20230226185650652"></p>
<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="1-web1"><a href="#1-web1" class="headerlink" title="1.web1"></a>1.web1</h3><?PHP 

  show_source(__FILE__);

  ini_set("allow_url_include","on");

  error_reporting(0);

  $file=$_GET['file'];

  $q=$_GET['q'];

  $a = $GET['a'];

  $b = $_GET['b'];

  $c = $_POST['c'];

  $v = $_POST['v'];

  if($q==1 && $q+1 !== 2){ #q==弱比较，不同格式会先转换成同类型再比较，q!+1!==2是强比较必须类型数值完全相同科学计数法绕过即可

​    if($a != $b && md5($a) == md5($b))]]></content>
      <categories>
        <category>周赛</category>
      </categories>
      <tags>
        <tag>周赛wp</tag>
      </tags>
  </entry>
  <entry>
    <title>HGAME2023wp（MISC）</title>
    <url>/2023/01/08/HGAME2023MISCwp/</url>
    <content><![CDATA[<p>一.Sign in {Misc}<br>aGdhbWV7V2VsY29tZV9Ub19IR0FNRTIwMjMhfQ&#x3D;&#x3D;<br>base64密码<br>解码：hgame{Welcome_To_HGAME2023!}<br>二.e99p1ant_want_girlfriend{Misc}<br>打开010Editor，把图片拖进去<br><img src="https://img-blog.csdnimg.cn/38c7ff3f74ce407489ecc1d26a1a409b.png" alt="在这里插入图片描述"><br>把02改成03<br><img src="https://img-blog.csdnimg.cn/633aea336d794653a0b8884a49641f63.png" alt="在这里插入图片描述"><br>hgame{e99p1ant_want_a_girlfriend_qq_524306184}<br>三.Where am  I<br><img src="https://img-blog.csdnimg.cn/c837c923cae44947a3ab74db2017ca49.png" alt="在这里插入图片描述">PCAPNG 是一种用于将捕获的网络数据包跟踪记录到文件的格式。 它被设计为 tcpdump 和其他使用 libpcap 库的软<br>件使用的原始 PCAP 格式的可扩展继承者.目前，只有 Wireshark 可以读取和写入 PCAPNG 文件，而 libpcap （以及<br>使用它的软件）只能读取其中一些文件。<br><img src="https://img-blog.csdnimg.cn/2a079bf7c0e445caba064737e1a0acec.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/611f16c0c2b64560a470edba734b4467.png" alt="在这里插入图片描述"><br>另存为 1.jpg 到桌面，发现打不开，拖入010，与下图对比发现<br><img src="https://img-blog.csdnimg.cn/2c397c54be5d4b4f933b7da17593d64f.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/f7fad212d4504527bde2905a550fb99d.png" alt="在这里插入图片描述"><br>至此均可以参考这篇文章！删除前段无用信息可得到<br><img src="https://img-blog.csdnimg.cn/58f66d8d43d741d9aa9fa23262ebd654.png" alt="在这里插入图片描述"><br>打开图片有密码<br><img src="https://img-blog.csdnimg.cn/f1d66dde97084a42b6034d8d44bfc211.png" alt="在这里插入图片描述"><br>rar文件伪加密：第24个字节，该字节尾数为4表示加密，0表示无加密，将尾数改为0即可破解伪加密<br>zip文件伪加密：当压缩源文件目录区的全局方位标记为0900(表示为加密)，<br>并且压缩文件数据区的全局方式位标记为0000(未加密)则会被识别为加密，但是文件并没有真正的加密，也就是所说的<br>伪加密<br><img src="https://img-blog.csdnimg.cn/48d01ce8e091462eba7cce8d9ed95748.png" alt="在这里插入图片描述"><br>前文说了图片损坏，所以再把图片拉进去！尝试修改图片，让其显示…<br><img src="https://img-blog.csdnimg.cn/d99e3f0aab134d8b913cb8ebe9cd20b3.png" alt="在这里插入图片描述"><br>观察一下，似乎找不到修改的地方！那就直接把图片拖进在线网站里，信息出来了！<br><img src="https://img-blog.csdnimg.cn/15abfec51f554ceabf2a78f6427b887e.png" alt="在这里插入图片描述"><br>还有火狐的扩展，可以试试！<br>四.神秘的海报<br>lsp隐写<br><img src="https://img-blog.csdnimg.cn/9c59da1e2184487d8704eb55c6e4c70f.png" alt="在这里插入图片描述"><br>可以得到<br><img src="https://img-blog.csdnimg.cn/7d58232eea1f40848d21724a61186fc9.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/a97664c1a3004834ae599e903ad809da.png" alt="在这里插入图片描述"><br>获得音乐，由题可得加密方式，从而进一步可得！<br>stegseek进行密码爆破： time stegseek 1.wav passwad.txt （自己找一个字典）<br><img src="https://img-blog.csdnimg.cn/0b987c8542d04a609ba3ccc07190c726.png" alt="在这里插入图片描述"><br>使用命令 steghide extract -sf 1.wav -p 123456  将隐藏信息从载体中分离出来<br><img src="https://img-blog.csdnimg.cn/8582afc4c6444d2680fea092469f24bd.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/8956400f55054c0480586268a6c916c0.png" alt="在这里插入图片描述"></p>
]]></content>
      <categories>
        <category>CTF</category>
      </categories>
      <tags>
        <tag>MISC</tag>
      </tags>
  </entry>
  <entry>
    <title>3.12周赛wp</title>
    <url>/2023/03/12/3-12%E5%91%A8%E8%B5%9Bwp/</url>
    <content><![CDATA[<h1 id="WP-0312"><a href="#WP-0312" class="headerlink" title="WP(0312)"></a>WP(0312)</h1><h2 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h2><h3 id="MISC1"><a href="#MISC1" class="headerlink" title="MISC1"></a>MISC1</h3><p>明文攻击+修改图片高度</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312144855304.png" alt="image-20230312144855304"></p>
<p>CRC32相同拖进工具里明文爆破3分钟左右</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312145649291.png" alt="image-20230312145649291"></p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312145804420.png" alt="image-20230312145804420"></p>
<h3 id="MISC2"><a href="#MISC2" class="headerlink" title="MISC2"></a>MISC2</h3><p>题目来自[HGAME 2022 week1]好康的流量</p>
<p>pcapng就用Wireshark打开看一看</p>
<p>搜索字符串png发现可疑流量</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312150642091.png" alt="image-20230312150642091"></p>
<p>继续追踪TCP流</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312150703138.png" alt="image-20230312150703138"></p>
<p>很明显是base64转图片，找个在线网志转一下就OK</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312150738688.png" alt="image-20230312150738688"></p>
<p>转换后的图片没有藏文件，在stegslove里的Green plane2通道发现了条形码</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312151152092.png" alt="image-20230312151152092"></p>
<p>条形码识别拿到第一串flag</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312151342616.png" alt="image-20230312151342616"></p>
<p>第二串flag在LSB中也可以看到，或者用zsteg -a 无脑输出</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312151556915.png" alt="image-20230312151556915"><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312151824219.png" alt="image-20230312151824219"></p>
<h2 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h2><h3 id="CRYPTO1"><a href="#CRYPTO1" class="headerlink" title="CRYPTO1"></a>CRYPTO1</h3><p>签到题，大家都写出来就不写wp了</p>
<h3 id="RSA"><a href="#RSA" class="headerlink" title="RSA"></a>RSA</h3><p><a href="https://zhuanlan.zhihu.com/p/450180396">RSA —— 经典的非对称加密算法 - 知乎 (zhihu.com)</a></p>
<p>解题脚本</p>
<figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">import gmpy2</span><br><span class="line">import libnum</span><br><span class="line">p = 141493587653297411370439677105095474506267822697001438051041895587903396514427461466979497141218213971690310610514467813146676842622743398790253412530819749118406134020947115559682593610342763888104969622973887741207742252760222498680896216682602158136788796526168985621624735704961525874105354623989072264981</span><br><span class="line">q = 111441439477838955803597483896717666754532380278114130983843648670032762436607561052410587524915150904926002034830888185361650817789453762849839552420521067076892846499981550153493686351516888441312325540874518004148842425315229417788597821758537506532889890486063082554704330240793974476699063453282978886249</span><br><span class="line">c = 5079028827869590362000738880301174705093432869418229030159524009544135123601838083162186012939657219639413807233474698696910473121742000239640600292625130736396432402798048160699294611561735918851833555240411603368351677461523270039409765030657943566974099009072220652270860050596240753142886589936267208762755667491046856428335946408740914977272214355515294978180415824639164370758420558281118779203031611474436168706576433173184518313609380881414206683447702818891792028867192446462828374301387165986209056247548070890174500701700183255023679504718963526079877860379115328770781897622621806437172112937589750896340</span><br><span class="line">e = 65537</span><br><span class="line">n = p * q</span><br><span class="line">phi = (p - 1) * (q - 1)</span><br><span class="line">d = gmpy2.invert(e, phi)</span><br><span class="line">m = pow(c, d, n)</span><br><span class="line">print(libnum.n2s(int(m)))</span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h2><h3 id="hello-world"><a href="#hello-world" class="headerlink" title="hello world"></a>hello world</h3><p>IDA查看字符串</p>
<h3 id="PYreverse"><a href="#PYreverse" class="headerlink" title="PYreverse"></a>PYreverse</h3><p>python打包的exe，直接ida反汇编不太行</p>
<p><a href="https://zhuanlan.zhihu.com/p/394049570">Pyhon解包及反编译: PyInstaller Extractor+uncompyle6 - 知乎 (zhihu.com)</a></p>
<p>需要的工具文章里写的很详细</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312161228590.png" alt="image-20230312161228590"></p>
<p>我这里是需要补全这个magic head </p>
<p>第一步找到struct和程序同名文件 用010打开</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312161337505.png" alt="image-20230312161337505"></p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312161347466.png" alt="image-20230312161347466"></p>
<p>struct里的这部分原文件里是没有的，将它插入进去改文件后缀位pyc就可</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312161446383.png" alt="image-20230312161446383"></p>
<p>反编译之后异或就是flag</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312162612270.png" alt="image-20230312162612270"></p>
<h3 id="maze"><a href="#maze" class="headerlink" title="maze"></a>maze</h3><p><a href="https://blog.csdn.net/m0_52164435/article/details/124871122?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-0-124871122-blog-112414254.pc_relevant_3mothn_strategy_and_data_recovery&spm=1001.2101.3001.4242.1&utm_relevant_index=3">ida使用技巧之动态调试_ida动态调试_parafish_0的博客-CSDN博客</a></p>
<p>主函数很简单，看的也很清楚</p>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/29032258/1678112464671-9b0820c7-07f9-47c2-b12c-0c3ebe0a0c8b.png" alt="image.png"></p>
<p>题目并没有给你现成的地图，需要自己简单的调试一下，在check函数里面定义了迷宫的规则，wsad控制上下左右</p>
<p><img src="https://cdn.nlark.com/yuque/0/2023/png/29032258/1678112500130-4fbf76f3-4dc8-4ef0-98d9-c7049eecd792.png" alt="image.png"></p>
<p>提取地图</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312162215066.png" alt="image-20230312162215066"></p>
<p>CreatMap函数里写的也很清楚是16x16规格的迷宫</p>
<p>提取出来画个图走一遍就好</p>
<figure class="highlight autohotkey"><table><tr><td class="code"><pre><span class="line">maze = [<span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    0,</span>   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">0</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,</span><br><span class="line"><span class="built_in">    1,</span>   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>,   <span class="number">1</span>]</span><br><span class="line"><span class="title">for i in range(len(maze)):</span></span><br><span class="line"><span class="title">    if i % 16 == 0:</span></span><br><span class="line">        print()</span><br><span class="line"><span class="title">    else:</span></span><br><span class="line">        print(maze[i],end=&#x27; &#x27;)</span><br><span class="line">import hashlib</span><br><span class="line">m = &#x27;wwdddwwwaaawwwwwwwwwddddssssdddssdsssssssdddwwwwddsssd&#x27;</span><br><span class="line">print()</span><br><span class="line">print(&#x27;SLsec&#123;&#x27;+hashlib.md5(m.encode(encoding=&#x27;UTF-<span class="number">8</span>&#x27;)).hexdigest()+&#x27;&#125;&#x27;)</span><br><span class="line"><span class="meta">#flag = SLsec&#123;a8622109e2fb1296e06d5eed6f78f954&#125;</span></span><br><span class="line"><span class="meta">#maze = wwdddwwwaaawwwwwwwwwddddssssdddssdsssssssdddwwwwddsssd</span></span><br></pre></td></tr></table></figure>

<h2 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h2><h3 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$$$$_</span>) &amp;&amp; <span class="variable">$$$$_ </span>== <span class="number">5614</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag1</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num </span>= <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>前半部分$$$$_ 就是一个字符传递例如：_&#x3D;a1&amp;a1&#x3D;a2那么a2就是$$_</p>
<p>Playload:_&#x3D;a1&amp;a1&#x3D;a2&amp;a2&#x3D;a3&amp;a3&#x3D;5614</p>
<p>下面一部分 num !&#x3D; 5614 可以使用十六进制绕过但</p>
<p>preg_match(“&#x2F;[a-z]|.&#x2F;i”, $num)又禁用了十六进制前缀中的x所以只能使用八进制来绕过但if(!strpos($num, “0”)){检测头是否为0接着改010574</p>
<p>(intval($num,0)&#x3D;&#x3D;&#x3D;4476)这个就是没别的办法只能寻找特殊字符绕过了</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);	</span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">256</span>;<span class="variable">$i</span>++)&#123;</span><br><span class="line">	<span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt; <span class="number">1</span>; <span class="variable">$j</span>++) &#123; </span><br><span class="line">		<span class="variable">$a</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>);</span><br><span class="line">		<span class="variable">$num</span> =<span class="variable">$a</span>.<span class="string">&#x27;010574&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">			<span class="keyword">break</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">			<span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">			<span class="keyword">echo</span> <span class="variable">$num</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;&#125;</span><br><span class="line">		&#125;	</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p>跑出来就是 字符+可以用  playload:</p>
<p>GET  ?num&#x3D;+010574</p>
<p>POST:  _&#x3D;a1&amp;a1&#x3D;a2&amp;a2&#x3D;a3&amp;a3&#x3D;5614</p>
]]></content>
      <categories>
        <category>周赛</category>
      </categories>
      <tags>
        <tag>周赛wp</tag>
      </tags>
  </entry>
  <entry>
    <title>3.26周赛</title>
    <url>/2023/03/28/3-26%E5%91%A8%E8%B5%9B/</url>
    <content><![CDATA[<h1 id="WEB"><a href="#WEB" class="headerlink" title="WEB"></a>WEB</h1><h2 id="鲜衣怒马少年郎，谁人不识理塘王！"><a href="#鲜衣怒马少年郎，谁人不识理塘王！" class="headerlink" title="鲜衣怒马少年郎，谁人不识理塘王！"></a>鲜衣怒马少年郎，谁人不识理塘王！</h2><p>顶真</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SLsec</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;鍒€涓嶉攱鍒╅┈澶槮&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pass</span>=<span class="string">&#x27;浣犳嬁浠€涔堝拰鍥涚偣鏂�&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$jk</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">a4</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;jk;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">a6</span>(<span class="params"><span class="variable">$ding</span>,<span class="variable">$zhen</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt; name==<span class="variable">$ding</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;pass==<span class="variable">$zhen</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">a8</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;jk)&#123;<span class="comment">#$jk为真</span></span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>; </span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="string">&quot;椴滆。鎬掗┈灏戝勾閮庯紝璋佷汉涓嶈瘑鐞嗗鐜嬶紒&quot;</span>;&#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$name</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line"><span class="variable">$pass</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;name&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">a6</span>(<span class="variable">$name</span>,<span class="variable">$pass</span>))&#123;<span class="comment">#赋值判断pass传参与两个GET是否相同</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">a4</span>())&#123;<span class="comment">#赋值</span></span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">a8</span>();&#125;<span class="comment">#调用flag</span></span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Snow leopards are really hard to ride, so it&#x27;s better to exchange money for an Audi&quot;</span>;</span><br><span class="line">    &#125;&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SLsec</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$pass</span>=<span class="string">&#x27;aa&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$jk</span>=<span class="literal">true</span>;&#125;</span><br><span class="line">  <span class="variable">$f</span>=<span class="keyword">new</span> <span class="title class_">SLsec</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$f</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>

<p><a href="https://k5hai-1311151548.cos.ap-shanghai.myqcloud.com/https://k5hai-1311151548.cos.ap-shanghai.myqcloud.comimage-20230326200954241.png">https://k5hai-1311151548.cos.ap-shanghai.myqcloud.com/https://k5hai-1311151548.cos.ap-shanghai.myqcloud.comimage-20230326200954241.png</a></p>
<p>play：GET： name&#x3D;a&amp;pass&#x3D;aa</p>
<p>​	     POST:   user&#x3D;O:5:”SLsec”:3:{s:4:”name”;s:1:”a”;s:4:”pass”;s:2:”aa”;s:2:”jk”;b:1;}</p>
<h1 id="CRYPTO"><a href="#CRYPTO" class="headerlink" title="CRYPTO"></a>CRYPTO</h1><h2 id="babyrsa"><a href="#babyrsa" class="headerlink" title="babyrsa"></a>babyrsa</h2><figure class="highlight makefile"><table><tr><td class="code"><pre><span class="line">from Crypto.Util.number import *</span><br><span class="line">import gmpy2</span><br><span class="line">p= 174900179045398405758362887050510099953351230680589941223587187096927676318250039003867347118828470850766614025136710989402078055968449696991925901611318398319579226096026113980420314613233522410263933804832601250567540744629955554545762144406833636478599885984277733223077146277644459138695484730091497123653</span><br><span class="line">q= 138394168894464614599095635109542670799766048108401527799025178725205133812543876982783399176166727189388896418668604671443249386259427967695540806910521362186865886429031334061503953791903407614931162328753160467494420213786798800975785789856116685244900988587164035039772328579334638131513694977152566697693</span><br><span class="line">dq= 91144988599155922537286812069488697332186431610461674212452885608698963724568088535192289473758461311143377744214326484716015838529829408451331802003020019755397796512654690339237890864185649014688783869167705450325681146031490758620578699998011937814370759561761662578187180465099739857369029748140120600665</span><br><span class="line">dp= 77086099023854203737282939293131883320148165131282183381041486477787447250448637817213304263658092078129814396693072568608252203284383928126276449456687549559196269981593821846047893367155199274005122723844388469454558713530315183683329104798684553606121087426276184813900290984173218215988206302221537366933</span><br><span class="line">c= 15801371432169186780418480692589791195238785876344412995045613608181370212202255665942402417893437199493695445538341476746293760869621577715385796212569911097161252465453342990879413408685475673255790355354475333896669490479548332300912398201417641777563849663680004298227798906936140992367106039486966585574927214313333872682519241375796031187317957899045859494277570277966275262219924901316942847426675912933662265462110997773928571167535352177539455991039999517915239795197245498033201847388365903662518433723721091041449528248327695253818581438003566115867963542838871840099584964228370817957241460684463142116638</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">I = gmpy2.invert(q,p)</span><br><span class="line">mp = pow(c,dp,p)</span><br><span class="line">mq = pow(c,dq,q)               <span class="comment">#求幂取模运算</span></span><br><span class="line"></span><br><span class="line">m = (((mp-mq)*I)%p)*q+mq       <span class="comment">#求明文公式</span></span><br><span class="line"></span><br><span class="line">print( long_to_bytes(m))         <span class="comment">#转为十六进制</span></span><br></pre></td></tr></table></figure>

<h2 id="base？"><a href="#base？" class="headerlink" title="base？"></a>base？</h2><p>很简单的base64换表解码。<br>首先写个python脚本提取编码表</p>
<figure class="highlight jboss-cli"><table><tr><td class="code"><pre><span class="line">这是提取的编码表：</span><br><span class="line">JKLxNOMyUzVABCDEFGH798PQIacbdefghijklmWXYZ0123456SRTnopqrstuvw+<span class="string">/=</span></span><br></pre></td></tr></table></figure>

<p>然后编写脚本解码：</p>
<figure class="highlight maxima"><table><tr><td class="code"><pre><span class="line">import <span class="built_in">base64</span></span><br><span class="line">import <span class="built_in">string</span></span><br><span class="line"></span><br><span class="line">str1 = <span class="string">&quot;9nSTaPCu8MimQoamdXmg9qGRIPsXa8wjIQCmQTIngF==&quot;</span></span><br><span class="line"></span><br><span class="line">string1 = <span class="string">&quot;JKLxNOMyUzVABCDEFGH798PQIacbdefghijklmWXYZ0123456SRTnopqrstuvw+/=&quot;</span></span><br><span class="line">string2 = <span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">base64</span>.b64decode(str1.<span class="built_in">translate</span>(str.maketrans(string1,string2))))</span><br></pre></td></tr></table></figure>

<p>也可以网站解密：<br><img src="https://xmzbk-1310919595.cos.ap-nanjing.myqcloud.com/image-20230326113727063.png" alt="image-20230326113727063"></p>
<h1 id="MISC"><a href="#MISC" class="headerlink" title="MISC"></a>MISC</h1><h2 id="看不懂的文件"><a href="#看不懂的文件" class="headerlink" title="看不懂的文件"></a>看不懂的文件</h2><p>把文件复制到虚拟机，打开终端执行 cat flag就出flag了</p>
<p>flag:SLsec{!2023_Will_Be_Special,2022_Was_Not!}</p>
<h2 id="里在干什莫？"><a href="#里在干什莫？" class="headerlink" title="里在干什莫？"></a>里在干什莫？</h2><p>16进制文件是反的很容易看出来</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">tmp = <span class="string">&#x27;&#x27;</span></span><br><span class="line">with <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="string">&#x27;r&#x27;</span>) as file: <span class="selector-id">#flag</span>.txt里保存的是反着的<span class="number">16</span>进制文本</span><br><span class="line">    re_str = file<span class="selector-class">.read</span>()</span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> re_str:</span><br><span class="line">   tmp += <span class="selector-tag">i</span><span class="selector-class">.strip</span>()</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(tmp[::-<span class="number">1</span>])</span></span></span><br><span class="line">#<span class="number">504</span>B0304140000000800F8BE7956F4507576100000000E00000008000000666C61672E747874AB4D2D2E4A2D4B2DAA4E4E2DF6090600504B01021400140000000800F8BE7956F4507576100000000E000000080024000000000000002000000000000000666C61672E7478740A00200000000000010018001F7EE443325FD901FF777E4A325FD901C6D233C4245FD901504B050600000000010001005A000000360000000000</span><br></pre></td></tr></table></figure>

<p>将输出的16进制010重新读取一下就是flag</p>
<h2 id="你知道什么是xor吗？"><a href="#你知道什么是xor吗？" class="headerlink" title="你知道什么是xor吗？"></a>你知道什么是xor吗？</h2><p>这道题是shangu👴赞助的</p>
<p>附件很简单，一个key，一个flag,还有题目的关键描述 ‘xor’</p>
<figure class="highlight ini"><table><tr><td class="code"><pre><span class="line"><span class="attr">key</span> = <span class="string">&#x27;jaks&#123;qwertyui-opas-dfgh-jklz-xcvbnmqwertu&#125;&#x27;</span></span><br><span class="line"><span class="attr">flag</span> = <span class="string">&#x27;óòõëÿ¾»®¿íâë÷ÿñë­îÿ¨ û ÿ¤­¥±ÿ¿ú½®÷öïº®º²¼ÿ&#x27;</span></span><br></pre></td></tr></table></figure>

<p>这道题脑洞很大，所以我就按我的分析来了</p>
<p>首先看key，标准的flag格式，但是前四位被替换成了’jaks’，里面是按照键盘的qwer顺序，最开始分析的是字母在表中的顺序之类的，但是死活凑不出flag就放弃了。</p>
<p>换一条思路，异或具有可逆性，或许’jask‘与’flag‘异或的结果就是我们要找的关键</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312153303362.png" alt="image-20230312153303362"></p>
<p>再看flag这串乱码，先取前四位找一下规律,由于乱码的ascii码值通常是很大的，超出了标准ascii码的范围，我们可以先看一下他的ascii值是多少</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312153728805.png" alt="image-20230312153728805"></p>
<p>还是找不到什么规律，由于xor本质上是二进制比特位之间的操作，我们进一步观察他们的二进制形式</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312154001470.png" alt="image-20230312154001470"></p>
<p>再看’jask‘与’flag‘异或结果的二进制</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230312154148276.png" alt="image-20230312154148276"></p>
<p>其实到这里就已经很明显了，</p>
<p>将flag的各位取反再与key异或</p>
<p>脚本</p>
<figure class="highlight sas"><table><tr><td class="code"><pre><span class="line"><span class="keyword">key</span> = <span class="string">&#x27;jaks&#123;qwertyui-opas-dfgh-jklz-xcvbnmqwertu&#125;&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;óòõëÿ¾»®¿íâë÷ÿñë­îÿ¨ û ÿ¤­¥±ÿ¿ú½®÷öïº®º²¼ÿ&#x27;</span></span><br><span class="line"><span class="keyword">data </span>= [0xff ^ ord(i) for i <span class="keyword">in</span> flag]</span><br><span class="line">for i <span class="keyword">in</span> <span class="meta">range</span>(le<span class="meta">n</span>(data)):</span><br><span class="line">    pr<span class="meta">int</span>(chr(ord(<span class="keyword">key</span>[i])^data[i]),<span class="keyword">end</span>=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure>

<p>最后看一下出题人视角</p>
<p>拿到flag &gt; 与随便打出来的key异或 &gt; 将异或结果按位取反 &gt; 给出附件</p>
<h1 id="REVERSE"><a href="#REVERSE" class="headerlink" title="REVERSE"></a>REVERSE</h1><h2 id="re2"><a href="#re2" class="headerlink" title="re2"></a>re2</h2><p>程序是有一个upx壳，壳没有魔改可以直接脱</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230326203037222.png" alt="image-20230326203037222"></p>
<p>首先是通过循环可以看出来12个总共12位，<strong>v4</strong>含有转义字符需要去一下，所以这里为了方便直接用ascii码，加密就是找到v4中字符在__data_strart__ 表中的位置，然后将他的ascii减1（其实可以看出来表中的字符就是倒着的ascii码表）</p>
<p>脚本</p>
<figure class="highlight stylus"><table><tr><td class="code"><pre><span class="line">v4 = <span class="selector-attr">[42,70,39,34,78,44,34,40,73,63,43,64]</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">__data_strart__ = <span class="string">&#x27;~&#125;|&#123;zyxwvutsrqponmlkjihgfedcba`_^]\[ZYXWVUTSRQPONMLKJIHGFEDCBA@?&gt;=&lt;;:9876543210/.-,+*)(\&#x27;&amp;%$# !&quot;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> <span class="selector-tag">i</span> <span class="keyword">in</span> v4:</span><br><span class="line">    flag += <span class="built_in">chr</span>(__data_strart__<span class="selector-class">.find</span>(<span class="built_in">chr</span>(i))+<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(flag)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure>

<h2 id="贪吃蛇"><a href="#贪吃蛇" class="headerlink" title="贪吃蛇"></a>贪吃蛇</h2><p>贪吃蛇小游戏来自SWPUCTF 2022 新生赛</p>
<p>反编译可以看到一个v18</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230326205454666.png" alt="image-20230326205454666"></p>
<p>这个代码写这里八九不离十可以猜到v18就是分数</p>
<p>ce直接改数值</p>
<p>因为刚开始v18&#x3D;4，就从4开始扫，分数加一慢慢筛选</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230326211220393.png" alt="image-20230326211220393"></p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230326211243449.png" alt="image-20230326211243449"></p>
<p>改下数值直接就能出flag</p>
<p><img src="https://hyup-1311193709.cos.ap-nanjing.myqcloud.com/blogimg/image-20230326211341663.png" alt="image-20230326211341663"></p>
]]></content>
      <categories>
        <category>周赛</category>
      </categories>
      <tags>
        <tag>周赛wp</tag>
      </tags>
  </entry>
</search>
